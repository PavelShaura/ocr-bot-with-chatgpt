from typing import Union

from aiogram import Router, F
from aiogram.types import CallbackQuery, Message
from aiogram.fsm.context import FSMContext
from aiogram.filters import StateFilter

from ocrbot.db.pg_manager import pg_manager
from ocrbot.keyboards.inline.user_kbd.send_own_text import send_own_text_keyboard
from ocrbot.states.states import FSMFillForm

own_text_router: Router = Router()


@own_text_router.callback_query(
    F.data.in_(["own_text"]),
    flags={"throttling_key": "callback"},
)
@own_text_router.message(
    F.text == "–°–ø—Ä–æ—Å–∏—Ç—å —É ChatGPT üí¨", flags={"throttling_key": "default"}
)
async def own_text(query: Union[Message, CallbackQuery], state: FSMContext) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞.

    :param query: –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –∏–ª–∏ –∑–∞–ø—Ä–æ—Å–∞ –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞.
    :type query: Union[aiogram.types.Message, aiogram.types.CallbackQuery]
    :param state: –°–æ—Å—Ç–æ—è–Ω–∏–µ FSM.
    :type state: aiogram.fsm.context.FSMContext
    """
    message: Message = query if isinstance(query, Message) else query.message
    msg = await message.answer(text="üìé  –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–π —Ç–µ–∫—Å—Ç –≤ —á–∞—Ç . . .")
    chat_id = msg.chat.id
    await state.set_state(FSMFillForm.rewritten_prompt)
    await state.update_data(chat_id=chat_id)


@own_text_router.message(StateFilter(FSMFillForm.rewritten_prompt))
async def process_rewritten_prompt(message: Message, state: FSMContext) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞.

    :param message: –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è.
    :type message: aiogram.types.Message
    :param state: –°–æ—Å—Ç–æ—è–Ω–∏–µ FSM.
    :type state: aiogram.fsm.context.FSMContext
    """
    data = await state.get_data()
    chat_id = data.get("chat_id")
    user_id = message.from_user.id
    prompt_text = message.text
    await pg_manager.save_query(user_id, prompt_text, chat_id)
    await message.answer(
        text=f"üìé  –í–∞—à —Ç–µ–∫—Å—Ç:\n\n{prompt_text}", reply_markup=send_own_text_keyboard
    )
    await state.clear()
